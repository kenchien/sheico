// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Data.Entity;

namespace Clothes.Dal.Models
{
    public partial class sheicoContext : DbContext
    {
        public sheicoContext()
        {
        }


        public virtual DbSet<T00> T00 { get; set; }
        public virtual DbSet<T01> T01 { get; set; }
        public virtual DbSet<T02> T02 { get; set; }
        public virtual DbSet<T041> T041 { get; set; }
        public virtual DbSet<T042> T042 { get; set; }
        public virtual DbSet<T05> T05 { get; set; }
        public virtual DbSet<T06> T06 { get; set; }
        public virtual DbSet<T07> T07 { get; set; }
        public virtual DbSet<T08> T08 { get; set; }
        public virtual DbSet<T14> T14 { get; set; }
        public virtual DbSet<T15> T15 { get; set; }
        public virtual DbSet<T151> T151 { get; set; }
        public virtual DbSet<T152> T152 { get; set; }
        public virtual DbSet<T17> T17 { get; set; }
        public virtual DbSet<T171> T171 { get; set; }
        public virtual DbSet<T91> T91 { get; set; }
        public virtual DbSet<T92> T92 { get; set; }
        public virtual DbSet<T93> T93 { get; set; }
        public virtual DbSet<T94> T94 { get; set; }
        public virtual DbSet<T95> T95 { get; set; }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            modelBuilder.Entity<T00>(entity =>
            {
                entity.HasKey(e => new { e.T0001, e.T0003 })
                    .HasName("pk_T00");

                entity.Property(e => e.T0001)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("選單代碼");

                entity.Property(e => e.T0003)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("使用者ID");

                entity.Property(e => e.T0002)
                    .IsRequired()
                    .HasMaxLength(15)
                    .HasComment("選單名稱");

                entity.Property(e => e.T0004)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("資料更新人員");

                entity.Property(e => e.T0005)
                    .HasColumnType("datetime")
                    .HasComment("資料更新日期");

                entity.Property(e => e.T0006)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("刪除註記");
            });

            modelBuilder.Entity<T01>(entity =>
            {
                entity.HasKey(e => e.T0101);

                entity.HasIndex(e => e.T0102)
                    .HasName("IX_T01");

                entity.Property(e => e.T0101)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部位大類序號");

                entity.Property(e => e.T0102)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部位大類代碼");

                entity.Property(e => e.T0103)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasComment("部位大類名稱");

                entity.Property(e => e.T0104)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("失效日期");

                entity.Property(e => e.T0105)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("資料更新人員");

                entity.Property(e => e.T0106)
                    .HasColumnType("datetime")
                    .HasComment("資料更新日期");
            });

            modelBuilder.Entity<T02>(entity =>
            {
                entity.HasKey(e => e.T0201);

                entity.Property(e => e.T0201)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部位中類代碼");

                entity.Property(e => e.T0202)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasComment("部位中類名稱");

                entity.Property(e => e.T0203)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("失效日期");

                entity.Property(e => e.T0204)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("資料更新人員");

                entity.Property(e => e.T0205)
                    .HasColumnType("datetime")
                    .HasComment("資料更新日期");
            });

            modelBuilder.Entity<T041>(entity =>
            {
                entity.HasKey(e => new { e.T04101, e.T04112 });

                entity.Property(e => e.T04101)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("物料料號");

                entity.Property(e => e.T04112)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("產品廠");

                entity.Property(e => e.T04102)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("長度上限");

                entity.Property(e => e.T04103)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasComment("長度單位Unit");

                entity.Property(e => e.T04104)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("備損係數");

                entity.Property(e => e.T04105)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("備損加量");

                entity.Property(e => e.T04106)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasComment("備損單位Unit");

                entity.Property(e => e.T04107)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("效期(起)");

                entity.Property(e => e.T04108)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("效期(迄)");

                entity.Property(e => e.T04109)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("資料更新人員");

                entity.Property(e => e.T04110)
                    .HasColumnType("datetime")
                    .HasComment("資料更新日期");

                entity.Property(e => e.T04111)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("刪除註記");
            });

            modelBuilder.Entity<T042>(entity =>
            {
                entity.HasKey(e => new { e.T04201, e.T04212 });

                entity.Property(e => e.T04201)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("物料大中類");

                entity.Property(e => e.T04212)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("產品廠");

                entity.Property(e => e.T04202)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("長度上限");

                entity.Property(e => e.T04203)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasComment("長度單位Unit");

                entity.Property(e => e.T04204)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("備損係數");

                entity.Property(e => e.T04205)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("備損加量");

                entity.Property(e => e.T04206)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasComment("備損單位Unit");

                entity.Property(e => e.T04207)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("效期(起)");

                entity.Property(e => e.T04208)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("效期(迄)");

                entity.Property(e => e.T04209)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("資料更新人員");

                entity.Property(e => e.T04210)
                    .HasColumnType("datetime")
                    .HasComment("資料更新日期");

                entity.Property(e => e.T04211)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("刪除註記");
            });

            modelBuilder.Entity<T05>(entity =>
            {
                entity.HasKey(e => e.T0501);

                entity.Property(e => e.T0501)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("輔料簡稱代碼");

                entity.Property(e => e.T0502)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasComment("輔料簡稱名稱");

                entity.Property(e => e.T0503)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("失效日期");

                entity.Property(e => e.T0504)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("資料更新人員");

                entity.Property(e => e.T0505)
                    .HasColumnType("datetime")
                    .HasComment("資料更新日期");
            });

            modelBuilder.Entity<T06>(entity =>
            {
                entity.HasKey(e => new { e.T0601, e.T0602 });

                entity.Property(e => e.T0601)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("產品廠");

                entity.Property(e => e.T0602)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("製造廠");

                entity.Property(e => e.T0603)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("失效日期");

                entity.Property(e => e.T0604)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("資料更新人員");

                entity.Property(e => e.T0605)
                    .HasColumnType("datetime")
                    .HasComment("資料更新日期");
            });

            modelBuilder.Entity<T07>(entity =>
            {
                entity.HasKey(e => new { e.T0701, e.T0702 });

                entity.Property(e => e.T0701)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("產品廠");

                entity.Property(e => e.T0702)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("成品大中類");

                entity.Property(e => e.T0703)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("失效日期");

                entity.Property(e => e.T0704)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("資料更新人員");

                entity.Property(e => e.T0705)
                    .HasColumnType("datetime")
                    .HasComment("資料更新日期");
            });

            modelBuilder.Entity<T08>(entity =>
            {
                entity.HasKey(e => new { e.T0801, e.T0802, e.T0804 });

                entity.Property(e => e.T0801)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("產品廠代碼");

                entity.Property(e => e.T0802)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部位序號");

                entity.Property(e => e.T0804)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部位中類代碼");

                entity.Property(e => e.T0803)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部位大類代碼");

                entity.Property(e => e.T0805)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("失效日期");

                entity.Property(e => e.T0806)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("資料更新人員");

                entity.Property(e => e.T0807)
                    .HasColumnType("datetime")
                    .HasComment("資料更新日期");
            });

            modelBuilder.Entity<T14>(entity =>
            {
                entity.HasKey(e => new { e.T1405, e.T1401, e.T1403 });

                entity.HasIndex(e => e.T1406)
                    .HasName("IX_T14");

                entity.Property(e => e.T1405)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部位中類代碼");

                entity.Property(e => e.T1401)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部件作法編碼");

                entity.Property(e => e.T1403)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部件作法版次");

                entity.Property(e => e.T1402)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasComment("部件作法敘述");

                entity.Property(e => e.T1404)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部位大類代碼");

                entity.Property(e => e.T1406)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("單元工程編碼");

                entity.Property(e => e.T1407)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("單元工程版次");

                entity.Property(e => e.T1408)
                    .HasMaxLength(150)
                    .HasComment("重要變更");

                entity.Property(e => e.T1409)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("效期(起)");

                entity.Property(e => e.T1410)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("效期(迄)");

                entity.Property(e => e.T1411)
                    .HasMaxLength(150)
                    .HasComment("下架原因");

                entity.Property(e => e.T1412)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("資料更新人員");

                entity.Property(e => e.T1413)
                    .HasColumnType("datetime")
                    .HasComment("資料更新日期");

                entity.Property(e => e.T1414)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("已上傳圖片");

                entity.Property(e => e.T1415)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("已上傳影片");

                entity.Property(e => e.T1416)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("本作法是否開放");

                entity.Property(e => e.T1417)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("專銷品牌1");

                entity.Property(e => e.T1418)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("專銷品牌2");

                entity.Property(e => e.T1419)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("特放品牌1");

                entity.Property(e => e.T1420)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("特放品牌2");

                entity.Property(e => e.T1421)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("特放品牌3");

                entity.Property(e => e.T1422)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("特放品牌4");

                entity.Property(e => e.T1423)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("特放品牌5");

                entity.Property(e => e.T1424)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("特放品牌6");

                entity.Property(e => e.T1425)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("輔料代碼1");

                entity.Property(e => e.T1426)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("輔料簡稱1要維護詳盡規格");

                entity.Property(e => e.T1427)
                    .HasMaxLength(150)
                    .HasComment("輔料備註1");

                entity.Property(e => e.T1428)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1429)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1430).HasMaxLength(150);

                entity.Property(e => e.T1431)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1432)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1433).HasMaxLength(150);

                entity.Property(e => e.T1434)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1435)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1436).HasMaxLength(150);

                entity.Property(e => e.T1437)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1438)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1439).HasMaxLength(150);

                entity.Property(e => e.T1440)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1441)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1442).HasMaxLength(150);

                entity.Property(e => e.T1443)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1444)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1445).HasMaxLength(150);

                entity.Property(e => e.T1446)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1447)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1448).HasMaxLength(150);

                entity.Property(e => e.T1449)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1450)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1451).HasMaxLength(150);

                entity.Property(e => e.T1452)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1453)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1454).HasMaxLength(150);

                entity.Property(e => e.T1455)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1456)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1457).HasMaxLength(150);

                entity.Property(e => e.T1458)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1459)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1460).HasMaxLength(150);

                entity.Property(e => e.T1461)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1462)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1463).HasMaxLength(150);

                entity.Property(e => e.T1464)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1465)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1466).HasMaxLength(150);

                entity.Property(e => e.T1467)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1468)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1469).HasMaxLength(150);

                entity.Property(e => e.T1470)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1471)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1472).HasMaxLength(150);

                entity.Property(e => e.T1473)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1474)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1475).HasMaxLength(150);

                entity.Property(e => e.T1476)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1477)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1478).HasMaxLength(150);

                entity.Property(e => e.T1479)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1480)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1481).HasMaxLength(150);

                entity.Property(e => e.T1482)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1483)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1484).HasMaxLength(150);

                entity.Property(e => e.T1485)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1486)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1487).HasMaxLength(150);

                entity.Property(e => e.T1488)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1489)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1490).HasMaxLength(150);

                entity.Property(e => e.T1491)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1492)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1493).HasMaxLength(150);

                entity.Property(e => e.T1494)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1495)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1496).HasMaxLength(150);

                entity.Property(e => e.T1497)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1498)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1499).HasMaxLength(150);

                entity.Property(e => e.T1500)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1501)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1502).HasMaxLength(150);

                entity.Property(e => e.T1503)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1504)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1505).HasMaxLength(150);

                entity.Property(e => e.T1506)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1507)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1508).HasMaxLength(150);

                entity.Property(e => e.T1509)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1510)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1511).HasMaxLength(150);

                entity.Property(e => e.T1512)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1513)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1514).HasMaxLength(150);

                entity.Property(e => e.T1515)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1516)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1517).HasMaxLength(150);

                entity.Property(e => e.T1518)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1519)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1520).HasMaxLength(150);

                entity.Property(e => e.T1521)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1522)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1523).HasMaxLength(150);

                entity.Property(e => e.T1524)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1525)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1526).HasMaxLength(150);

                entity.Property(e => e.T1527)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1528)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T1529).HasMaxLength(150);

                entity.Property(e => e.T1530)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部件作法備註");

                entity.Property(e => e.T1531)
                    .HasMaxLength(150)
                    .HasComment("部件作法提示");
            });

            modelBuilder.Entity<T15>(entity =>
            {
                entity.HasKey(e => new { e.T1501, e.T1502, e.T1512, e.T1505, e.T1506, e.T1507 });

                entity.Property(e => e.T1501)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("成品料號");

                entity.Property(e => e.T1502)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("成品顏色代碼");

                entity.Property(e => e.T1512)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("成品作法版次");

                entity.Property(e => e.T1505)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("成品作法項次");

                entity.Property(e => e.T1506)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部件作法編碼");

                entity.Property(e => e.T1507)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部件作法版次");

                entity.Property(e => e.T1503)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部位大類代碼");

                entity.Property(e => e.T1504)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部位中類代碼");

                entity.Property(e => e.T1508)
                    .HasMaxLength(120)
                    .HasComment("成品作法備註");

                entity.Property(e => e.T1509)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("資料更新人員");

                entity.Property(e => e.T1510)
                    .HasColumnType("datetime")
                    .HasComment("資料更新日期");

                entity.Property(e => e.T1511)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("失效日期");

                entity.Property(e => e.T1513)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("產品廠");

                entity.Property(e => e.T1514)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("客戶簡稱");
            });

            modelBuilder.Entity<T151>(entity =>
            {
                entity.HasKey(e => new { e.T15101, e.T15102, e.T15259, e.T15103, e.T15104, e.T15105, e.T15106, e.T15108, e.T15110 });

                entity.Property(e => e.T15101)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("成品料號");

                entity.Property(e => e.T15102)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("成品顏色代碼");

                entity.Property(e => e.T15259)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("成品作法版次");

                entity.Property(e => e.T15103)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("成品作法項次");

                entity.Property(e => e.T15104)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部件作法編碼");

                entity.Property(e => e.T15105)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部件作法版次");

                entity.Property(e => e.T15106)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("輔料項次");

                entity.Property(e => e.T15108)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("輔料料號");

                entity.Property(e => e.T15110)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("輔料顏色代碼");

                entity.Property(e => e.T15107)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("輔料代碼");

                entity.Property(e => e.T15109)
                    .HasMaxLength(10)
                    .HasComment("輔料敘述");

                entity.Property(e => e.T15111)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("輔料顏色敘述");

                entity.Property(e => e.T15112)
                    .HasMaxLength(60)
                    .HasComment("輔料備註");

                entity.Property(e => e.T15113)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasComment("部件輔料單位");

                entity.Property(e => e.T15114)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("成品尺寸1");

                entity.Property(e => e.T15115)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料長度/單件用量/裁切長度 1");

                entity.Property(e => e.T15116)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("紙版備註1");

                entity.Property(e => e.T15117)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料長度/裁切長度倍數 1");

                entity.Property(e => e.T15118)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("成品尺寸2");

                entity.Property(e => e.T15119)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料長度/單件用量/裁切長度 2");

                entity.Property(e => e.T15120)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("紙版備註2");

                entity.Property(e => e.T15121)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料長度/裁切長度倍數 2");

                entity.Property(e => e.T15122)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.T15123).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15124)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T15125).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15126)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.T15127).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15128)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T15129).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15130)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.T15131).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15132)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T15133).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15134)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.T15135).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15136)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T15137).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15138)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.T15139).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15140)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T15141).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15142)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.T15143).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15144)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T15145).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15146)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.T15147).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15148)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T15149).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15150)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.T15151).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15152)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T15153).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15154)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.T15155).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15156)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T15157).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15158)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.T15159).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15160)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T15161).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15162)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.T15163).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15164)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T15165).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15166)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.T15167).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15168)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T15169).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15170)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.T15171).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15172)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T15173).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.T15221)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("平切");

                entity.Property(e => e.T15222)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("R角");

                entity.Property(e => e.T15223)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasComment("R角裁切模具編碼");

                entity.Property(e => e.T15224)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("其他裁切");

                entity.Property(e => e.T15225)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasComment("其他裁切模具編碼");

                entity.Property(e => e.T15226)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("完整Logo");

                entity.Property(e => e.T15227)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("依紙版量測");

                entity.Property(e => e.T15228)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("斬如紙版");
            });

            modelBuilder.Entity<T152>(entity =>
            {
                entity.HasKey(e => new { e.T15201, e.T15214, e.T15215, e.T15216, e.T15202, e.T15203, e.T15204, e.T15206 });

                entity.HasIndex(e => new { e.T15201, e.T15214, e.T15215, e.T15216, e.T15204, e.T15206 })
                    .HasName("idx_T152_1");

                entity.Property(e => e.T15201)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("成品料號");

                entity.Property(e => e.T15214)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("成品顏色代碼");

                entity.Property(e => e.T15215)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("成品尺寸");

                entity.Property(e => e.T15216)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("成品作法版次");

                entity.Property(e => e.T15202)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部件作法編碼");

                entity.Property(e => e.T15203)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("輔料項次");

                entity.Property(e => e.T15204)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("輔料料號");

                entity.Property(e => e.T15206)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("輔料顏色代碼");

                entity.Property(e => e.T15205)
                    .HasMaxLength(10)
                    .HasComment("輔料敘述");

                entity.Property(e => e.T15207)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("輔料顏色敘述");

                entity.Property(e => e.T15208)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasComment("輔料清單單位");

                entity.Property(e => e.T15209)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("紙版備註");

                entity.Property(e => e.T15210)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料倍數");

                entity.Property(e => e.T15211)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("物料需求量(BOM requirement)(YD/M)");

                entity.Property(e => e.T15212)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("損耗係數 (YD/M)");

                entity.Property(e => e.T15213)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("標準物料需求量(Standard BOM requirement) (YD/M)");

                entity.Property(e => e.T15217)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料長度(INCH)(含指定長度、裁切長度)");

                entity.Property(e => e.T15218)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料長度(CM)(含指定長度、裁切長度)");

                entity.Property(e => e.T15219)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("損耗加量");

                entity.Property(e => e.T15220)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasComment("輔料基礎單位(Base Unit of Measure)");

                entity.Property(e => e.T15221)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("平切");

                entity.Property(e => e.T15222)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("R角");

                entity.Property(e => e.T15223)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasComment("R角裁切模具編碼");

                entity.Property(e => e.T15224)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("其他裁切");

                entity.Property(e => e.T15225)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasComment("其他裁切模具編碼");

                entity.Property(e => e.T15226)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("完整Logo");

                entity.Property(e => e.T15227)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("依紙版量測");

                entity.Property(e => e.T15228)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("斬如紙版");
            });

            modelBuilder.Entity<T17>(entity =>
            {
                entity.HasKey(e => new { e.T1701, e.T1702, e.T1703, e.T1704, e.T1705, e.T1715, e.T1708, e.T1709, e.T1710 });

                entity.Property(e => e.T1701)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("合約號碼");

                entity.Property(e => e.T1702)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("合約項次");

                entity.Property(e => e.T1703)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("成品料號");

                entity.Property(e => e.T1704)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("成品顏色代碼");

                entity.Property(e => e.T1705)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("工廠");

                entity.Property(e => e.T1715)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("成品作法版次");

                entity.Property(e => e.T1708)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("成品作法項次");

                entity.Property(e => e.T1709)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部件作法編碼");

                entity.Property(e => e.T1710)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部件作法版次");

                entity.Property(e => e.T1706)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部位大類代碼");

                entity.Property(e => e.T1707)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部位中類代碼");

                entity.Property(e => e.T1711)
                    .HasMaxLength(120)
                    .HasComment("作法備註");

                entity.Property(e => e.T1712)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("資料更新人員");

                entity.Property(e => e.T1713)
                    .HasColumnType("datetime")
                    .HasComment("資料更新日期");

                entity.Property(e => e.T1714)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("刪除註記");
            });

            modelBuilder.Entity<T171>(entity =>
            {
                entity.HasKey(e => new { e.T17101, e.T17102, e.T17103, e.T17104, e.T17105, e.T17106, e.T17107, e.T17108, e.T17109 });

                entity.Property(e => e.T17101)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("合約號碼");

                entity.Property(e => e.T17102)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("合約項次");

                entity.Property(e => e.T17103)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("成品料號");

                entity.Property(e => e.T17104)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("成品顏色代碼");

                entity.Property(e => e.T17105)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("工廠");

                entity.Property(e => e.T17106)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部件作法項次");

                entity.Property(e => e.T17107)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部件作法編碼");

                entity.Property(e => e.T17108)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("部件作法版次");

                entity.Property(e => e.T17109)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("輔料項次");

                entity.Property(e => e.T17110)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasComment("輔料簡稱");

                entity.Property(e => e.T17111)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("輔料料號");

                entity.Property(e => e.T17112)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasComment("輔料敘述");

                entity.Property(e => e.T17113)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("輔料顏色代碼");

                entity.Property(e => e.T17114)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("輔料顏色敘述");

                entity.Property(e => e.T17115)
                    .HasMaxLength(10)
                    .HasComment("輔料備註");

                entity.Property(e => e.T17116)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasComment("輔料單位");

                entity.Property(e => e.T17117)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("成品尺寸1");

                entity.Property(e => e.T17118)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料長度1");

                entity.Property(e => e.T17119)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料倍數1");

                entity.Property(e => e.T17120)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("成品尺寸2");

                entity.Property(e => e.T17121)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料長度2");

                entity.Property(e => e.T17122)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料倍數2");

                entity.Property(e => e.T17123)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("成品尺寸3");

                entity.Property(e => e.T17124)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料長度3");

                entity.Property(e => e.T17125)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料倍數3");

                entity.Property(e => e.T17126)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("成品尺寸4");

                entity.Property(e => e.T17127)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料長度4");

                entity.Property(e => e.T17128)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料倍數4");

                entity.Property(e => e.T17129)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("成品尺寸5");

                entity.Property(e => e.T17130)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料長度5");

                entity.Property(e => e.T17131)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料倍數5");

                entity.Property(e => e.T17132)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("成品尺寸6");

                entity.Property(e => e.T17133)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料長度6");

                entity.Property(e => e.T17134)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料倍數6");

                entity.Property(e => e.T17135)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("成品尺寸7");

                entity.Property(e => e.T17136)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料長度7");

                entity.Property(e => e.T17137)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料倍數7");

                entity.Property(e => e.T17138)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("成品尺寸8");

                entity.Property(e => e.T17139)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料長度8");

                entity.Property(e => e.T17140)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料倍數8");

                entity.Property(e => e.T17141)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("成品尺寸9");

                entity.Property(e => e.T17142)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料長度9");

                entity.Property(e => e.T17143)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料倍數9");

                entity.Property(e => e.T17144)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("成品尺寸10");

                entity.Property(e => e.T17145)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料長度10");

                entity.Property(e => e.T17146)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料倍數10");

                entity.Property(e => e.T17147)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("成品尺寸11");

                entity.Property(e => e.T17148)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料長度11");

                entity.Property(e => e.T17149)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料倍數11");

                entity.Property(e => e.T17150)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("成品尺寸12");

                entity.Property(e => e.T17151)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料長度12");

                entity.Property(e => e.T17152)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料倍數12");

                entity.Property(e => e.T17153)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("成品尺寸13");

                entity.Property(e => e.T17154)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料長度13");

                entity.Property(e => e.T17155)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料倍數13");

                entity.Property(e => e.T17156)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("成品尺寸14");

                entity.Property(e => e.T17157)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料長度14");

                entity.Property(e => e.T17158)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料倍數14");

                entity.Property(e => e.T17159)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasComment("成品尺寸15");

                entity.Property(e => e.T17160)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料長度15");

                entity.Property(e => e.T17161)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("輔料倍數15");
            });

            modelBuilder.Entity<T91>(entity =>
            {
                entity.HasKey(e => e.T9101);

                entity.Property(e => e.T9101)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("物料料號");

                entity.Property(e => e.T9102)
                    .IsRequired()
                    .HasMaxLength(150)
                    .HasComment("物料敘述");

                entity.Property(e => e.T9103)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("CATEGORY");

                entity.Property(e => e.T9104)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("AS-400版號(Parent code)");

                entity.Property(e => e.T9105)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("MQ");

                entity.Property(e => e.T9106)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("MODEL");

                entity.Property(e => e.T9107)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("CLOSURE STYLE");

                entity.Property(e => e.T9108)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasComment("認證類別");

                entity.Property(e => e.T9109)
                    .HasMaxLength(150)
                    .HasComment("款式說明");

                entity.Property(e => e.T9110)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasComment("尺寸範圍");

                entity.Property(e => e.T9111)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasComment("單位(Base Unit of Measure)");

                entity.Property(e => e.T9112)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("物料狀態");
            });

            modelBuilder.Entity<T92>(entity =>
            {
                entity.HasKey(e => new { e.T9201, e.T9202, e.T9203, e.T9204 });

                entity.Property(e => e.T9201)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("物料料號");

                entity.Property(e => e.T9202)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("顏色代碼");

                entity.Property(e => e.T9203)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .HasComment("尺寸代碼");

                entity.Property(e => e.T9204)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("地區代碼");

                entity.Property(e => e.T9205)
                    .HasMaxLength(50)
                    .HasComment("顏色敘述");

                entity.Property(e => e.T9206)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("成品grid");

                entity.Property(e => e.T9207)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("物料狀態");
            });

            modelBuilder.Entity<T93>(entity =>
            {
                entity.HasKey(e => new { e.T9301, e.T9302 });

                entity.Property(e => e.T9301)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("成品料號");

                entity.Property(e => e.T9302)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .HasComment("成品尺寸");
            });

            modelBuilder.Entity<T94>(entity =>
            {
                entity.HasKey(e => new { e.T9401, e.T9402, e.T9403, e.T9404 });

                entity.Property(e => e.T9401)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("合約號碼");

                entity.Property(e => e.T9402)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("合約項次");

                entity.Property(e => e.T9403)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("成品料號");

                entity.Property(e => e.T9404)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("成品顏色代碼");

                entity.Property(e => e.T9405)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("交貨日期");

                entity.Property(e => e.T9406)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("CUST ITEM");

                entity.Property(e => e.T9407)
                    .IsRequired()
                    .HasMaxLength(30)
                    .HasComment("製單人員");

                entity.Property(e => e.T9408)
                    .IsRequired()
                    .HasMaxLength(30)
                    .HasComment("業務人員");
            });

            modelBuilder.Entity<T95>(entity =>
            {
                entity.HasKey(e => new { e.T9501, e.T9502, e.T9503, e.T9504, e.T9505, e.T9506 });

                entity.Property(e => e.T9501)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("工單號碼WO No.");

                entity.Property(e => e.T9502)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("工廠Plant");

                entity.Property(e => e.T9503)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("成品料號");

                entity.Property(e => e.T9504)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("成品顏色");

                entity.Property(e => e.T9505)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("成品尺寸");

                entity.Property(e => e.T9506)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("成品地區");

                entity.Property(e => e.T9507)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("Target Qty");

                entity.Property(e => e.T9508)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("UL lot nub");

                entity.Property(e => e.T9509)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Issue Date");

                entity.Property(e => e.T9510)
                    .HasColumnType("decimal(18, 3)")
                    .HasComment("WO Q'ty");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}